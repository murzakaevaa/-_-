#include <iostream>
#include <string>
using namespace std;

// Функция для заполнения массива длинных целых чисел из строки
void fillArray(long long* array, const string& str, int parts) {
    int index = 0;
    // Цикл для извлечения подстрок из строки
    for (int i = str.length(); i > 0; i -= 9) {
        // Извлекаюм подстроку длиной до 9 символов
        string substring = str.substr(max(0, i - 9), min(9, i));
        // Преобразую подстроку в long long и сохраняю в массив
        array[index++] = stoll(substring);
    }
}

// Функция для нахождения НОД двух чисел
long long gcd(long long a, long long b) {
    // Алгоритм Евклида для нахождения НОД
    while (b != 0) {
        long long temp = b; 
        b = a % b; 
        a = temp; 
    }
    return a; // Возвращаю НОД
}

// Функция для нахождения НОД трех чисел
long long gcdOfThree(long long* a, long long* b, long long* c, int parts) {
    // Нахождение НОД между первым и вторым числами
    long long result = gcd(a[0], b[0]);
    // Нахождение НОД результата с третьим числом
    result = gcd(result, c[0]);
    return result; // Возвращаю НОД
}


int main() {
    setlocale(LC_ALL, "RU");

   
    string s1, s2, s3;
    cout << "Нахождение наибольшего общего делителя трёх чисел (m, n, p >= MaxInt)" << endl;

   
    cout << "Введите первое число m: ";
    cin >> s1; 
    cout << "Введите второе число n: ";
    cin >> s2; 
    cout << "Введите третье число p: ";
    cin >> s3; 

    // Определяю максимальную длину среди трех введенных чисел
    int maxLength = max({ s1.length(), s2.length(), s3.length() });
    // Вычисляю количество частей, необходимых для хранения чисел
    int parts = (maxLength + 8) / 9;

    // Создаю массивы для хранения чисел
    long long a[parts] = { 0 }; 
    long long b[parts] = { 0 }; 
    long long c[parts] = { 0 };

    // Заполняю массивы, разбивая строки на секции по 9 цифр
    fillArray(a, s1, parts);
    fillArray(b, s2, parts);
    fillArray(c, s3, parts);

    // Нахожу НОД трёх чисел
    long long result = gcdOfThree(a, b, c, parts);

    // Вывод результата на экран
    cout << "Наибольший общий делитель: " << result << endl;
    return 0;
}
